src/main/resources/rules/
├── common.dsl
├── invoice.dsl
├── invoice.dslr
├── order.dsl
├── order.dslr


 // Iterate subdirectories (invoice, order, etc.)
        try (DirectoryStream<Path> stream = Files.newDirectoryStream(baseRulesDir, Files::isDirectory)) {
            for (Path subDir : stream) {
                if (subDir.getFileName().toString().equals("shared")) continue;

                String name = subDir.getFileName().toString();
                Path dslFile = subDir.resolve(name + ".dsl");
                Path dslrFile = subDir.resolve(name + ".dslr");

                if (!Files.exists(dslFile) || !Files.exists(dslrFile)) {
                    System.out.println("⚠ Skipping " + name + " — DSL/DSLR file missing.");
                    continue;
                }

                DSLTokenizedMappingFile combinedMapping = new DSLTokenizedMappingFile();
                combinedMapping.parseAndLoad(Files.newBufferedReader(dslFile));
                combinedMapping.getMapping().addAll(commonMapping.getMapping());

                DefaultExpander expander = new DefaultExpander();
                expander.addDSLMapping(combinedMapping.getMapping());

                String drl = expander.expand(Files.newBufferedReader(dslrFile));

                Path outputDir = outputBaseDir.resolve(name);
                Files.createDirectories(outputDir);
                Files.writeString(outputDir.resolve(name + ".drl"), drl);

                System.out.println("✔ Generated: " + outputDir.resolve(name + ".drl"));
            }
        }

<build>
  <plugins>
    <plugin>
      <groupId>org.codehaus.mojo</groupId>
      <artifactId>exec-maven-plugin</artifactId>
      <version>3.1.0</version>
      <executions>
        <execution>
          <id>generate-drls</id>
          <phase>generate-sources</phase>
          <goals>
            <goal>java</goal>
          </goals>
          <configuration>
            <mainClass>com.example.dslr.DSLRExpander</mainClass>
            <method>generateAll</method>
          </configuration>
        </execution>
      </executions>
    </plugin>
  </plugins>
</build>
